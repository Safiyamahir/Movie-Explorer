{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const api = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n      return response.data.results || [];\n    } catch (error) {\n      console.error('Error fetching trending movies:', error);\n      return [];\n    }\n  },\n  searchMovies: async (query, page = 1, filters = {}) => {\n    try {\n      let url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(query)}&page=${page}`;\n\n      // Add filters to the URL if they exist\n      if (filters.year) {\n        url += `&year=${filters.year}`;\n      }\n      if (filters.genreId) {\n        url += `&with_genres=${filters.genreId}`;\n      }\n      if (filters.rating) {\n        // TMDB uses vote_average for ratings\n        url += `&vote_average.gte=${filters.rating}`;\n      }\n      const response = await axios.get(url);\n      return {\n        results: response.data.results || [],\n        total_pages: response.data.total_pages || 1\n      };\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      return {\n        results: [],\n        total_pages: 1\n      };\n    }\n  },\n  discoverMovies: async (page = 1, filters = {}) => {\n    try {\n      let url = `${BASE_URL}/discover/movie?api_key=${API_KEY}&page=${page}`;\n\n      // Add filters to the URL\n      if (filters.year) {\n        url += `&primary_release_year=${filters.year}`;\n      }\n      if (filters.genreId) {\n        url += `&with_genres=${filters.genreId}`;\n      }\n      if (filters.rating) {\n        url += `&vote_average.gte=${filters.rating}`;\n      }\n      if (filters.sortBy) {\n        url += `&sort_by=${filters.sortBy}`;\n      }\n      const response = await axios.get(url);\n      return {\n        results: response.data.results || [],\n        total_pages: response.data.total_pages || 1\n      };\n    } catch (error) {\n      console.error('Error discovering movies:', error);\n      return {\n        results: [],\n        total_pages: 1\n      };\n    }\n  },\n  getMovieDetails: async movieId => {\n    try {\n      const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n      return response.data || null;\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      return null;\n    }\n  },\n  getGenres: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n      return response.data.genres || [];\n    } catch (error) {\n      console.error('Error fetching genres:', error);\n      return [];\n    }\n  }\n};","map":{"version":3,"names":["axios","API_KEY","process","env","REACT_APP_TMDB_API_KEY","BASE_URL","api","getTrendingMovies","response","get","data","results","error","console","searchMovies","query","page","filters","url","encodeURIComponent","year","genreId","rating","total_pages","discoverMovies","sortBy","getMovieDetails","movieId","getGenres","genres"],"sources":["/Users/shahulhameed/movie-explorer/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const api = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n      return response.data.results || [];\n    } catch (error) {\n      console.error('Error fetching trending movies:', error);\n      return [];\n    }\n  },\n  \n  searchMovies: async (query, page = 1, filters = {}) => {\n    try {\n      let url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(query)}&page=${page}`;\n      \n      // Add filters to the URL if they exist\n      if (filters.year) {\n        url += `&year=${filters.year}`;\n      }\n      \n      if (filters.genreId) {\n        url += `&with_genres=${filters.genreId}`;\n      }\n      \n      if (filters.rating) {\n        // TMDB uses vote_average for ratings\n        url += `&vote_average.gte=${filters.rating}`;\n      }\n      \n      const response = await axios.get(url);\n      return {\n        results: response.data.results || [],\n        total_pages: response.data.total_pages || 1\n      };\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      return { results: [], total_pages: 1 };\n    }\n  },\n  \n  discoverMovies: async (page = 1, filters = {}) => {\n    try {\n      let url = `${BASE_URL}/discover/movie?api_key=${API_KEY}&page=${page}`;\n      \n      // Add filters to the URL\n      if (filters.year) {\n        url += `&primary_release_year=${filters.year}`;\n      }\n      \n      if (filters.genreId) {\n        url += `&with_genres=${filters.genreId}`;\n      }\n      \n      if (filters.rating) {\n        url += `&vote_average.gte=${filters.rating}`;\n      }\n      \n      if (filters.sortBy) {\n        url += `&sort_by=${filters.sortBy}`;\n      }\n      \n      const response = await axios.get(url);\n      return {\n        results: response.data.results || [],\n        total_pages: response.data.total_pages || 1\n      };\n    } catch (error) {\n      console.error('Error discovering movies:', error);\n      return { results: [], total_pages: 1 };\n    }\n  },\n  \n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n      return response.data || null;\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      return null;\n    }\n  },\n  \n  getGenres: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n      return response.data.genres || [];\n    } catch (error) {\n      console.error('Error fetching genres:', error);\n      return [];\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}