{"ast":null,"code":"var _jsxFileName = \"/Users/shahulhameed/movie-explorer/src/MovieContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { api } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieContext = /*#__PURE__*/createContext();\nexport const MovieProvider = ({\n  children\n}) => {\n  _s();\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [lastSearch, setLastSearch] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    // Load persisted data from local storage on mount\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n    const storedLastSearch = localStorage.getItem('lastSearch') || '';\n    setLastSearch(storedLastSearch);\n    const storedDarkMode = JSON.parse(localStorage.getItem('darkMode')) || false;\n    setDarkMode(storedDarkMode);\n\n    // Fetch trending movies on initial load\n    api.getTrendingMovies().then(movies => setTrendingMovies(movies));\n  }, []);\n  const addToFavorites = movie => {\n    const updatedFavorites = [...favorites, movie];\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n  const removeFromFavorites = movieId => {\n    const updatedFavorites = favorites.filter(movie => movie.id !== movieId);\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n  const setSearch = query => {\n    setLastSearch(query);\n    localStorage.setItem('lastSearch', query);\n  };\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', JSON.stringify(newDarkMode));\n  };\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      trendingMovies,\n      setTrendingMovies,\n      searchResults,\n      setSearchResults,\n      favorites,\n      addToFavorites,\n      removeFromFavorites,\n      lastSearch,\n      setSearch,\n      darkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieProvider, \"jw6ZNYcqJ9NHmEo77h48vO8MT8Q=\");\n_c = MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","MovieContext","MovieProvider","children","_s","trendingMovies","setTrendingMovies","searchResults","setSearchResults","favorites","setFavorites","lastSearch","setLastSearch","darkMode","setDarkMode","storedFavorites","JSON","parse","localStorage","getItem","storedLastSearch","storedDarkMode","getTrendingMovies","then","movies","addToFavorites","movie","updatedFavorites","setItem","stringify","removeFromFavorites","movieId","filter","id","setSearch","query","toggleDarkMode","newDarkMode","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shahulhameed/movie-explorer/src/MovieContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { api } from './api';\n\nexport const MovieContext = createContext();\n\nexport const MovieProvider = ({ children }) => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [lastSearch, setLastSearch] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Load persisted data from local storage on mount\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n    const storedLastSearch = localStorage.getItem('lastSearch') || '';\n    setLastSearch(storedLastSearch);\n    const storedDarkMode = JSON.parse(localStorage.getItem('darkMode')) || false;\n    setDarkMode(storedDarkMode);\n\n    // Fetch trending movies on initial load\n    api.getTrendingMovies().then(movies => setTrendingMovies(movies));\n  }, []);\n\n  const addToFavorites = (movie) => {\n    const updatedFavorites = [...favorites, movie];\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  const removeFromFavorites = (movieId) => {\n    const updatedFavorites = favorites.filter(movie => movie.id !== movieId);\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  const setSearch = (query) => {\n    setLastSearch(query);\n    localStorage.setItem('lastSearch', query);\n  };\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', JSON.stringify(newDarkMode));\n  };\n\n  return (\n    <MovieContext.Provider value={{\n      trendingMovies,\n      setTrendingMovies,\n      searchResults,\n      setSearchResults,\n      favorites,\n      addToFavorites,\n      removeFromFavorites,\n      lastSearch,\n      setSearch,\n      darkMode,\n      toggleDarkMode\n    }}>\n      {children}\n    </MovieContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}