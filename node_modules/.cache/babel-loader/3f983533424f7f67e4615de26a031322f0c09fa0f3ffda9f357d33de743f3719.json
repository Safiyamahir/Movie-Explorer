{"ast":null,"code":"var _jsxFileName = \"/Users/shahulhameed/movie-explorer/src/MovieContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { api } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieContext = /*#__PURE__*/createContext();\nexport const MovieProvider = ({\n  children\n}) => {\n  _s();\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n  const [genres, setGenres] = useState([]);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUserId = localStorage.getItem('userId');\n    const storedDarkMode = localStorage.getItem('darkMode');\n    const storedFavorites = localStorage.getItem('favorites');\n    if (storedToken) setToken(storedToken);\n    if (storedUserId) setUserId(storedUserId);\n    if (storedDarkMode) setDarkMode(storedDarkMode === 'true');\n    if (storedFavorites) {\n      try {\n        setFavorites(JSON.parse(storedFavorites));\n      } catch (error) {\n        console.error('Error parsing favorites:', error);\n        setFavorites([]);\n      }\n    }\n\n    // Fetch genres on app load\n    const fetchGenres = async () => {\n      try {\n        const genreList = await api.getGenres();\n        setGenres(genreList);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n\n  // Save favorites to localStorage when they change\n  useEffect(() => {\n    if (favorites.length > 0) {\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n    } else {\n      localStorage.removeItem('favorites');\n    }\n  }, [favorites]);\n\n  // Save dark mode preference to localStorage\n  useEffect(() => {\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  const toggleDarkMode = () => {\n    setDarkMode(prev => !prev);\n  };\n  const addToFavorites = movie => {\n    if (!favorites.some(fav => fav.id === movie.id)) {\n      setFavorites(prev => [...prev, movie]);\n    }\n  };\n  const removeFromFavorites = movieId => {\n    setFavorites(prev => prev.filter(movie => movie.id !== movieId));\n  };\n  const clearFavorites = () => {\n    setFavorites([]);\n    localStorage.removeItem('favorites');\n  };\n  const getGenreName = genreId => {\n    const genre = genres.find(g => g.id === parseInt(genreId));\n    return genre ? genre.name : 'Unknown';\n  };\n  const contextValue = {\n    trendingMovies,\n    setTrendingMovies,\n    searchResults,\n    setSearchResults,\n    favorites,\n    addToFavorites,\n    removeFromFavorites,\n    clearFavorites,\n    token,\n    setToken,\n    userId,\n    setUserId,\n    darkMode,\n    toggleDarkMode,\n    genres,\n    getGenreName\n  };\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n};\n_s(MovieProvider, \"NAqRBQWouZktLSfYKZkItehNEe4=\");\n_c = MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","MovieContext","MovieProvider","children","_s","trendingMovies","setTrendingMovies","searchResults","setSearchResults","favorites","setFavorites","token","setToken","userId","setUserId","darkMode","setDarkMode","genres","setGenres","storedToken","localStorage","getItem","storedUserId","storedDarkMode","storedFavorites","JSON","parse","error","console","fetchGenres","genreList","getGenres","length","setItem","stringify","removeItem","toggleDarkMode","prev","addToFavorites","movie","some","fav","id","removeFromFavorites","movieId","filter","clearFavorites","getGenreName","genreId","genre","find","g","parseInt","name","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shahulhameed/movie-explorer/src/MovieContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n  import { api } from './api';\n\n  export const MovieContext = createContext();\n\n  export const MovieProvider = ({ children }) => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [favorites, setFavorites] = useState([]);\n    const [token, setToken] = useState(null);\n    const [userId, setUserId] = useState(null);\n    const [darkMode, setDarkMode] = useState(false);\n    const [genres, setGenres] = useState([]);\n\n    // Load data from localStorage on mount\n    useEffect(() => {\n      const storedToken = localStorage.getItem('token');\n      const storedUserId = localStorage.getItem('userId');\n      const storedDarkMode = localStorage.getItem('darkMode');\n      const storedFavorites = localStorage.getItem('favorites');\n\n      if (storedToken) setToken(storedToken);\n      if (storedUserId) setUserId(storedUserId);\n      if (storedDarkMode) setDarkMode(storedDarkMode === 'true');\n      if (storedFavorites) {\n        try {\n          setFavorites(JSON.parse(storedFavorites));\n        } catch (error) {\n          console.error('Error parsing favorites:', error);\n          setFavorites([]);\n        }\n      }\n\n      // Fetch genres on app load\n      const fetchGenres = async () => {\n        try {\n          const genreList = await api.getGenres();\n          setGenres(genreList);\n        } catch (error) {\n          console.error('Error fetching genres:', error);\n        }\n      };\n      fetchGenres();\n    }, []);\n\n    // Save favorites to localStorage when they change\n    useEffect(() => {\n      if (favorites.length > 0) {\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n      } else {\n        localStorage.removeItem('favorites');\n      }\n    }, [favorites]);\n\n    // Save dark mode preference to localStorage\n    useEffect(() => {\n      localStorage.setItem('darkMode', darkMode);\n    }, [darkMode]);\n\n    const toggleDarkMode = () => {\n      setDarkMode(prev => !prev);\n    };\n\n    const addToFavorites = (movie) => {\n      if (!favorites.some(fav => fav.id === movie.id)) {\n        setFavorites(prev => [...prev, movie]);\n      }\n    };\n\n    const removeFromFavorites = (movieId) => {\n      setFavorites(prev => prev.filter(movie => movie.id !== movieId));\n    };\n\n    const clearFavorites = () => {\n      setFavorites([]);\n      localStorage.removeItem('favorites');\n    };\n\n    const getGenreName = (genreId) => {\n      const genre = genres.find(g => g.id === parseInt(genreId));\n      return genre ? genre.name : 'Unknown';\n    };\n\n    const contextValue = {\n      trendingMovies,\n      setTrendingMovies,\n      searchResults,\n      setSearchResults,\n      favorites,\n      addToFavorites,\n      removeFromFavorites,\n      clearFavorites,\n      token,\n      setToken,\n      userId,\n      setUserId,\n      darkMode,\n      toggleDarkMode,\n      genres,\n      getGenreName\n    };\n\n    return (\n      <MovieContext.Provider value={contextValue}>\n        {children}\n      </MovieContext.Provider>\n    );\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}